═══════════════════════════════════════════════════════════════════
  🏆 ROLLBOUNCE LEADERBOARD API - QUICK START
═══════════════════════════════════════════════════════════════════

STEP 1: CREATE WEB SERVICE (2 mins)
───────────────────────────────────────────────────────────────────
1. Go to: https://dashboard.render.com/create?type=web
2. Sign in with: support@vonbase.com
3. Connect repo: Tyvonneboykin/rollbounce-leaderboard-api
4. Fill in:
   Name: rollbounce-leaderboard-api
   Region: Ohio
   Branch: master
   Build: npm install
   Start: npm start
   Plan: Free

5. Add Environment Variables (click Advanced):
   DATABASE_URL = postgresql://leaderboard_user:RyklVj8q4iA70YkJQ1AqnBtg7TzDmp6P@dpg-d3lv5aidbo4c73bf5020-a.ohio-postgres.render.com:5432/leaderboard_0cns
   NODE_ENV = production

6. Click "Create Web Service"
7. Wait ~3 mins for "Live" status
8. COPY YOUR URL (e.g., https://rollbounce-api-XXXX.onrender.com)

───────────────────────────────────────────────────────────────────
STEP 2: RUN AUTOMATED DEPLOYMENT (3 mins)
───────────────────────────────────────────────────────────────────
cd ~/dev/rollbounce-leaderboard-api
./deploy-and-test.sh

(Paste your URL when prompted)

───────────────────────────────────────────────────────────────────
STEP 3: UPDATE UNITY
───────────────────────────────────────────────────────────────────
File: LeaderboardManager.cs (line 14)
Change: public string apiBaseUrl = "YOUR_URL/api";

───────────────────────────────────────────────────────────────────
DATABASE INFO (Already Created ✅)
───────────────────────────────────────────────────────────────────
Host: dpg-d3lv5aidbo4c73bf5020-a.ohio-postgres.render.com
Database: leaderboard_0cns
User: leaderboard_user
Dashboard: https://dashboard.render.com/d/dpg-d3lv5aidbo4c73bf5020-a

───────────────────────────────────────────────────────────────────
GITHUB REPO
───────────────────────────────────────────────────────────────────
https://github.com/Tyvonneboykin/rollbounce-leaderboard-api

═══════════════════════════════════════════════════════════════════
